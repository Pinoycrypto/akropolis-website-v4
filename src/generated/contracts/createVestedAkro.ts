/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  makeContractCreator,
  getOutput,
  getInput
} from "./utils/makeContractCreator";

import vestedAkro from "./abi/vestedAkro";

export const createVestedAkro = makeContractCreator(
  vestedAkro as any[],
  {
    callMethods: {
      akro: {
        output: [getOutput("address")]
      },

      decimals: {
        output: [getOutput("uinteger")]
      },

      isMinter: {
        inputs: [getInput("account", "address")],
        output: [getOutput("boolean")]
      },

      isOwner: {
        output: [getOutput("boolean")]
      },

      isSender: {
        inputs: [getInput("account", "address")],
        output: [getOutput("boolean")]
      },

      name: {
        output: [getOutput("string")]
      },

      owner: {
        output: [getOutput("address")]
      },

      symbol: {
        output: [getOutput("string")]
      },

      totalSupply: {
        output: [getOutput("uinteger")]
      },

      vestingPeriod: {
        output: [getOutput("uinteger")]
      },

      allowance: {
        inputs: [getInput("owner", "address"), getInput("spender", "address")],
        output: [getOutput("uinteger")]
      },

      balanceOf: {
        inputs: [getInput("account", "address")],
        output: [getOutput("uinteger")]
      },

      balanceInfoOf: {
        inputs: [getInput("account", "address")],
        output: [
          getOutput("uinteger"),
          getOutput("uinteger"),
          getOutput("uinteger")
        ]
      },

      batchesInfoOf: {
        inputs: [getInput("account", "address")],
        output: [getOutput("uinteger"), getOutput("uinteger")]
      },

      batchInfo: {
        inputs: [getInput("account", "address"), getInput("batch", "uinteger")],
        output: [
          getOutput("uinteger"),
          getOutput("uinteger"),
          getOutput("uinteger"),
          getOutput("uinteger"),
          getOutput("uinteger")
        ]
      }
    },
    sendMethods: {
      addMinter: {
        inputs: [getInput("account", "address")],
        output: [getOutput("void")]
      },

      addSender: {
        inputs: [getInput("account", "address")],
        output: [getOutput("void")]
      },

      renounceMinter: {
        output: [getOutput("void")]
      },

      renounceOwnership: {
        output: [getOutput("void")]
      },

      renounceSender: {
        output: [getOutput("void")]
      },

      transferOwnership: {
        inputs: [getInput("newOwner", "address")],
        output: [getOutput("void")]
      },

      initialize: {
        inputs: [
          getInput("_akro", "address"),
          getInput("_vestingPeriod", "uinteger")
        ],
        output: [getOutput("void")]
      },

      approve: {
        inputs: [
          getInput("spender", "address"),
          getInput("amount", "uinteger")
        ],
        output: [getOutput("boolean")]
      },

      transferFrom: {
        inputs: [
          getInput("sender", "address"),
          getInput("recipient", "address"),
          getInput("amount", "uinteger")
        ],
        output: [getOutput("boolean")]
      },

      transfer: {
        inputs: [
          getInput("recipient", "address"),
          getInput("amount", "uinteger")
        ],
        output: [getOutput("boolean")]
      },

      setVestingPeriod: {
        inputs: [getInput("_vestingPeriod", "uinteger")],
        output: [getOutput("void")]
      },

      mint: {
        inputs: [
          getInput("beneficiary", "address"),
          getInput("amount", "uinteger")
        ],
        output: [getOutput("void")]
      },

      unlockAvailable: {
        inputs: [
          getInput("holder", "address"),
          getInput("tillBatch", "uinteger")
        ],
        output: [getOutput("uinteger")]
      },

      unlockAndRedeemAll: {
        output: [getOutput("uinteger")]
      },

      redeemAllUnlocked: {
        output: [getOutput("uinteger")]
      }
    },
    events: {
      Approval: {
        inputs: [
          getInput("owner", "address"),
          getInput("spender", "address"),
          getInput("value", "uinteger")
        ]
      },

      Locked: {
        inputs: [getInput("holder", "address"), getInput("amount", "uinteger")]
      },

      MinterAdded: {
        inputs: [getInput("account", "address")]
      },

      MinterRemoved: {
        inputs: [getInput("account", "address")]
      },

      OwnershipTransferred: {
        inputs: [
          getInput("previousOwner", "address"),
          getInput("newOwner", "address")
        ]
      },

      SenderAdded: {
        inputs: [getInput("account", "address")]
      },

      SenderRemoved: {
        inputs: [getInput("account", "address")]
      },

      Transfer: {
        inputs: [
          getInput("from", "address"),
          getInput("to", "address"),
          getInput("value", "uinteger")
        ]
      },

      Unlocked: {
        inputs: [getInput("holder", "address"), getInput("amount", "uinteger")]
      }
    }
  } as const
);
